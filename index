<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulaire Site Bien Fait</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #503D59;
            --secondary: #F3A884;
            --accent: #AE5753;
            --text: #FFFFFF;
            --background: #42304A;
            --light-bg: rgba(255, 255, 255, 0.1);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--background);
            color: var(--text);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }
        
        h1 {
            font-size: 2rem;
            color: var(--secondary);
            margin-bottom: 10px;
            text-align: center;
        }
        
        p.subtitle {
            font-size: 1rem;
            opacity: 0.9;
            text-align: center;
            margin-bottom: 40px;
        }
        
        .progress-container {
            display: flex;
            justify-content: center;
            width: 100%;
            max-width: 600px;
            margin-bottom: 30px;
        }
        
      .progress-bar-container {
    width: 100%;
    max-width: 600px;
    background-color: rgba(255, 255, 255, 0.1);
    height: 10px;
    border-radius: 5px;
    overflow: hidden;
    margin-bottom: 30px;
}

.progress-bar {
    height: 100%;
    background-color: var(--secondary);
    transition: width 0.5s ease;
    border-radius: 5px;
}

.progress-text {
    text-align: center;
    font-size: 14px;
    margin-top: 5px;
    color: var(--text);
    opacity: 0.7;
}
    
        
        .form-container {
            width: 100%;
            max-width: 600px;
            display: flex;
            flex-direction: column;
            margin: 0 auto;
        }
        
        .form-screen {
            display: none;
            width: 100%;
        }
        
        .form-screen.active {
            display: flex;
            flex-direction: column;
        }
        
        .screen-title {
            font-size: 1.5rem;
            color: var(--secondary);
            margin-bottom: 30px;
        }
        
        .form-field {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 10px;
            font-weight: 500;
        }
        
        .form-input, 
        .form-select, 
        .form-textarea {
            width: 100%;
            padding: 12px 15px;
            border-radius: 8px;
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: var(--text);
            font-family: 'Poppins', sans-serif;
            font-size: 16px;
        }
        
        .form-input:focus, 
        .form-select:focus, 
        .form-textarea:focus {
            outline: none;
            border-color: var(--secondary);
        }
        
        .form-textarea {
            min-height: 100px;
            resize: vertical;
        }
        
        .radio-group,
        .checkbox-group {
            margin-bottom: 10px;
        }
        
        .radio-label,
        .checkbox-label {
            display: flex;
            align-items: center;
            margin-bottom: 12px;
            cursor: pointer;
        }
        
        .radio-input,
        .checkbox-input {
            margin-right: 12px;
            width: 18px;
            height: 18px;
            accent-color: var(--secondary);
        }
        
        .font-options {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 10px;
        }
        
        .font-option {
            padding: 10px;
            border-radius: 8px;
            background-color: rgba(255, 255, 255, 0.1);
            text-align: center;
            cursor: pointer;
        }
        
        .font-option.selected {
            background-color: rgba(243, 168, 132, 0.3);
            border: 1px solid var(--secondary);
        }
        
        .file-upload {
            display: flex;
            flex-direction: column;
        }
        
        .file-upload-button {
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px dashed rgba(255, 255, 255, 0.3);
            padding: 15px;
            border-radius: 8px;
            cursor: pointer;
        }
        
        .file-upload-icon {
            margin-right: 10px;
        }
        
        .conditional-field {
            display: none;
            margin-top: 10px;
        }
        
        .navigation-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 30px;
        }
        
        .btn {
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            border: none;
            font-family: 'Poppins', sans-serif;
            transition: all 0.3s ease;
        }
        
        .btn-next {
            background-color: var(--secondary);
            color: var(--primary);
        }
        
        .btn-prev {
            background-color: transparent;
            border: 1px solid var(--secondary);
            color: var(--text);
        }
        
        .btn-next:hover {
            opacity: 0.9;
        }
        
        .btn-prev:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        .save-draft {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            color: var(--text);
            opacity: 0.8;
            padding: 10px;
            cursor: pointer;
            margin-bottom: 20px;
        }
        
        .save-draft:hover {
            opacity: 1;
        }
        
        .save-status {
            font-size: 12px;
            margin-left: 10px;
        }
        
        .error-message {
            color: #ff6b6b;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        
        .form-field.error .error-message {
            display: block;
        }
        
        .form-field.error .form-input,
        .form-field.error .form-select,
        .form-field.error .form-textarea {
            border-color: #ff6b6b;
        }
        
        /* Assistant IA (plus discret) */
        .assistant-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: var(--secondary);
            color: var(--primary);
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }
        
        .assistant-chat {
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 320px;
            height: 400px;
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            display: none;
            flex-direction: column;
            overflow: hidden;
            z-index: 1000;
        }
        
        .assistant-header {
            background-color: var(--primary);
            color: #fff;
            padding: 12px 15px;
        }
        
        .assistant-messages {
            flex-grow: 1;
            padding: 15px;
            overflow-y: auto;
            background-color: #f8f8f8;
        }
        
        .assistant-input {
            display: flex;
            padding: 10px;
            border-top: 1px solid #eee;
        }
        
        .assistant-input input {
            flex-grow: 1;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 20px;
            margin-right: 10px;
        }
        
        .assistant-input button {
            background-color: var(--secondary);
            color: var(--primary);
            border: none;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }
        
        .message {
            padding: 8px 12px;
            margin-bottom: 10px;
            border-radius: 10px;
            max-width: 80%;
        }
        
        .message.assistant {
            background-color: #f0f0f0;
            align-self: flex-start;
        }
        
        .message.user {
            background-color: var(--secondary);
            color: var(--primary);
            align-self: flex-end;
            margin-left: auto;
        }
        
        /* Styles pour le s√©lecteur de couleur */
        .selected-colors {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
            min-height: 50px;
            padding: 10px;
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 8px;
            border: 1px dashed rgba(255, 255, 255, 0.2);
        }
        
        .color-chip {
            display: flex;
            align-items: center;
            padding: 5px 10px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            margin-bottom: 5px;
        }
        
        .color-chip-preview {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            margin-right: 8px;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .color-chip-value {
            font-size: 0.9rem;
            margin-right: 8px;
        }
        
        .color-chip-remove {
            background: none;
            border: none;
            color: var(--text);
            cursor: pointer;
            font-size: 1.1rem;
            opacity: 0.7;
            transition: opacity 0.2s ease;
        }
        
        .color-chip-remove:hover {
            opacity: 1;
        }
        
        .color-selector-container {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        
        .color-wheel-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .color-wheel-wrapper {
            position: relative;
        }
        
        .color-wheel {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: none;
            outline: none;
            cursor: pointer;
            overflow: hidden;
            background-image: conic-gradient(
                red, orange, yellow, green, blue, indigo, violet, red
            );
            appearance: none;
            -webkit-appearance: none;
        }
        
        .color-wheel::-webkit-color-swatch-wrapper {
            padding: 0;
        }
        
        .color-wheel::-webkit-color-swatch {
            border: none;
            border-radius: 50%;
        }
        
        .color-wheel-value {
            display: flex;
            align-items: center;
            gap: 10px;
            flex-grow: 1;
        }
        
        .color-preview {
            width: 30px;
            height: 30px;
            border-radius: 4px;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .color-input {
            flex-grow: 1;
            padding: 8px 12px;
            border-radius: 4px;
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: var(--text);
            font-family: 'Poppins', sans-serif;
        }
        
        .add-color-btn {
            padding: 8px 12px;
            background-color: var(--secondary);
            color: var(--primary);
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            transition: opacity 0.2s ease;
        }
        
        .add-color-btn:hover {
            opacity: 0.9;
        }
        
        .predefined-colors {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(30px, 1fr));
            gap: 10px;
            margin-top: 10px;
        }
        
        .color-swatch {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            border: 1px solid rgba(255, 255, 255, 0.3);
            transition: transform 0.2s ease;
            position: relative;
        }
        
        .color-swatch:hover {
            transform: scale(1.1);
        }
        
        .color-swatch::after {
            content: "+";
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: var(--text);
            font-size: 16px;
            font-weight: bold;
            opacity: 0;
            transition: opacity 0.2s ease;
            text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);
        }
        
        .color-swatch:hover::after {
            opacity: 1;
        }
        
        /* Responsive adaptations */
        @media (max-width: 768px) {
            .form-container {
                padding: 0;
            }
            
            .font-options {
                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            }
            
            .navigation-buttons {
                padding: 0 10px;
            }
            
            .btn {
                padding: 10px 20px;
            }
        }
        
        @media (max-width: 480px) {
            body {
                padding: 15px;
            }
            
            h1 {
                font-size: 1.8rem;
            }
            
            .screen-title {
                font-size: 1.3rem;
            }
            
            .dot {
                width: 8px;
                height: 8px;
            }
            
            .assistant-chat {
                width: 90%;
                right: 5%;
                left: 5%;
                bottom: 70px;
            }
            
            .color-wheel-container {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .predefined-colors {
                grid-template-columns: repeat(auto-fill, minmax(28px, 1fr));
            }
        }
    </style>
</head>
<body>
    <h1>Site Bien Fait</h1>
    <p class="subtitle">Formulaire de collecte d'informations pour votre site vitrine professionnel</p>
    
  <div class="progress-container">
    <div class="progress-bar-container">
        <div class="progress-bar" id="progressBar" style="width: 0%"></div>
    </div>
    <div class="progress-text" id="progressText">√âtape 1 sur 12</div>
</div>
    
    <div class="form-container">
        <div class="save-draft" id="saveDraft">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline></svg>
            Sauvegarder le brouillon
            <span class="save-status" id="saveStatus"></span>
        </div>
        
        <!-- Screen 1: Identit√© de l'entreprise -->
        <div class="form-screen active" id="screen1">
            <h2 class="screen-title">1. Identit√© de l'entreprise</h2>
            
            <div class="form-field">
                <label class="form-label" for="companyName">Nom de l'entreprise</label>
                <input type="text" id="companyName" class="form-input" required placeholder="Ex: Dupont Consulting">
                <div class="error-message">Veuillez renseigner le nom de votre entreprise</div>
            </div>
            
            <div class="form-field">
                <label class="form-label" for="mainActivity">Activit√© principale</label>
                <input type="text" id="mainActivity" class="form-input" required placeholder="Ex: Coaching en d√©veloppement personnel">
                <div class="error-message">Veuillez renseigner votre activit√© principale</div>
            </div>
            
            <div class="form-field">
                <label class="form-label" for="sector">Secteur d'activit√©</label>
                <select id="sector" class="form-select" required>
                    <option value="" disabled selected>S√©lectionnez un secteur</option>
                    <option value="commerce">Commerce</option>
                    <option value="artisanat">Artisanat</option>
                    <option value="services">Services</option>
                    <option value="restauration">Restauration</option>
                    <option value="sante">Sant√© & Bien-√™tre</option>
                    <option value="batiment">B√¢timent & Construction</option>
                    <option value="tech">Technologie & Digital</option>
                    <option value="education">√âducation & Formation</option>
                    <option value="autre">Autre</option>
                </select>
                <div class="error-message">Veuillez s√©lectionner un secteur d'activit√©</div>
            </div>
            
            <div class="form-field">
                <label class="form-label" for="location">Ville / Zone g√©ographique principale</label>
                <input type="text" id="location" class="form-input" required placeholder="Ex: Lyon et agglom√©ration">
                <div class="error-message">Veuillez renseigner votre zone g√©ographique</div>
            </div>
            
            <div class="navigation-buttons">
                <div></div> <!-- Empty div for spacing -->
                <button class="btn btn-next" data-next="2">Suivant</button>
            </div>
        </div>
        
        <!-- Screen 2: Logo et identit√© visuelle -->
        <div class="form-screen" id="screen2">
            <h2 class="screen-title">2. Logo et identit√© visuelle</h2>
            
            <div class="form-field">
                <label class="form-label">Que souhaiteriez-vous comme type de logo ?</label>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="logoType" value="lettrage" class="radio-input">
                        Lettrage (texte stylis√©)
                    </label>
                </div>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="logoType" value="pictogramme" class="radio-input">
                        Pictogramme avec lettrage
                    </label>
                </div>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="logoType" value="abstrait" class="radio-input">
                        Logo abstrait
                    </label>
                </div>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="logoType" value="none" class="radio-input">
                        Pas de pr√©f√©rence
                    </label>
                </div>
            </div>
            
            <div class="form-field">
                <label class="form-label">Choisissez les couleurs pour votre site/logo (max 3)</label>
                
                <div class="selected-colors" id="selectedColors">
                    <!-- Les puces de couleurs s√©lectionn√©es appara√Ætront ici -->
                </div>
                
                <div class="color-selector-container">
                    <div class="color-wheel-container">
                        <div class="color-wheel-wrapper">
                            <input type="color" id="colorWheel" class="color-wheel" value="#503D59">
                        </div>
                        
                        <div class="color-wheel-value">
                            <div class="color-preview" id="colorPreview" style="background-color: #503D59;"></div>
                            <input type="text" id="colorInput" class="color-input" value="#503D59" placeholder="Ex: #503D59">
                        </div>
                        
                        <button id="addColorBtn" class="add-color-btn">Ajouter</button>
                    </div>
                    
                    <div class="predefined-colors" id="predefinedColors">
                        <!-- Les couleurs pr√©d√©finies seront g√©n√©r√©es par JavaScript -->
                    </div>
                </div>
                <input type="hidden" id="selectedColorsInput" name="selectedColors" value="">
            </div>
            
            <div class="form-field">
                <label class="form-label">Inspirations pour votre logo (optionnel)</label>
                <div class="file-upload">
                    <label class="file-upload-button">
                        <span class="file-upload-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="17 8 12 3 7 8"></polyline><line x1="12" y1="3" x2="12" y2="15"></line></svg>
                        </span>
                        T√©l√©charger des exemples de logos qui vous plaisent
                        <input type="file" id="logoInspiration" accept=".jpg,.png,.svg,.pdf" multiple style="display: none;">
                    </label>
                </div>
                <div id="logoInspirationName" class="mt-2 text-sm"></div>
            </div>
            
            <div class="form-field">
                <label class="form-label" for="logoInspirationURLs">URLs d'exemples de logos que vous aimez (optionnel)</label>
                <textarea id="logoInspirationURLs" class="form-textarea" placeholder="https://exemple.com/logo.jpg, https://pinterest.com/pin/123456..."></textarea>
            </div>
            
            <div class="form-field">
                <label class="form-label">Polices d'√©criture pr√©f√©r√©es pour votre logo/site</label>
                
                <div class="font-options">
                    <div class="font-option" data-font="poppins" style="font-family: 'Poppins', sans-serif;">
                        Poppins - Aa Bb Cc 123
                    </div>
                    <div class="font-option" data-font="roboto" style="font-family: 'Roboto', sans-serif;">
                        Roboto - Aa Bb Cc 123
                    </div>
                    <div class="font-option" data-font="montserrat" style="font-family: 'Montserrat', sans-serif;">
                        Montserrat - Aa Bb Cc 123
                    </div>
                    <div class="font-option" data-font="playfair" style="font-family: 'Playfair Display', serif;">
                        Playfair - Aa Bb Cc 123
                    </div>
                    <div class="font-option" data-font="opensans" style="font-family: 'Open Sans', sans-serif;">
                        Open Sans - Aa Bb Cc 123
                    </div>
                    <div class="font-option" data-font="lato" style="font-family: 'Lato', sans-serif;">
                        Lato - Aa Bb Cc 123
                    </div>
                </div>
                <input type="hidden" id="selectedFonts" value="">
            </div>
            
            <div class="form-field">
                <label class="form-label">Avez-vous une charte graphique ?</label>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="hasCharte" value="yes" class="radio-input" id="hasCharteYes">
                        Oui
                    </label>
                </div>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="hasCharte" value="no" class="radio-input" checked>
                        Non
                    </label>
                </div>
                
                <div class="conditional-field" id="charteUploadField">
                    <div class="file-upload">
                        <label class="file-upload-button">
                            <span class="file-upload-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="17 8 12 3 7 8"></polyline><line x1="12" y1="3" x2="12" y2="15"></line></svg>
                            </span>
                            T√©l√©charger votre charte graphique
                            <input type="file" id="charteUpload" accept=".pdf,.jpg,.png" style="display: none;">
                        </label>
                    </div>
                </div>
            </div>
            
            <div class="navigation-buttons">
                <button class="btn btn-prev" data-prev="1">Pr√©c√©dent</button>
                <button class="btn btn-next" data-next="3">Suivant</button>
            </div>
        </div>
        
        <!-- Screen 3: Objectif principal du site -->
        <div class="form-screen" id="screen3">
            <h2 class="screen-title">3. Objectif principal du site</h2>
            
            <div class="form-field">
                <label class="form-label">Quel est l'objectif principal de votre site ?</label>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="mainObjective" value="services" class="radio-input" checked>
                        Pr√©senter mes services/produits
                    </label>
                </div>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="mainObjective" value="seo" class="radio-input">
                        √ätre visible sur Google
                    </label>
                </div>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="mainObjective" value="trust" class="radio-input">
                        Inspirer confiance
                    </label>
                </div>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="mainObjective" value="branding" class="radio-input">
                        Valoriser mon image de marque
                    </label>
                </div>
                
                <div class="radio-group">
                    <label class="radio-label">
                        <input type="radio" name="mainObjective" value="other" class="radio-input" id="otherObjective">
                        Autre
                    </label>
                </div>
                
                <div class="conditional-field" id="otherObjectiveField">
                    <input type="text" class="form-input" id="otherObjectiveText" placeholder="Pr√©cisez votre objectif">
                </div>
            </div>
            
            <div class="navigation-buttons">
                <button class="btn btn-prev" data-prev="2">Pr√©c√©dent</button>
                <button class="btn btn-next" data-next="4">Suivant</button>
            </div>
        </div>
        
        <!-- Ajoutez le reste des √©crans ici -->
        <!-- Screen 4, 5, etc. -->
        
        <!-- Par exemple, Screen 4: Vos offres / produits / services -->
        <div class="form-screen" id="screen4">
            <h2 class="screen-title">4. Vos offres / produits / services</h2>
            
            <div class="form-field">
                <label class="form-label" for="services">Listez les prestations / produits que vous proposez</label>
                <textarea id="services" class="form-textarea" placeholder="D√©crivez vos prestations ou produits en d√©tail..."></textarea>
            </div>
            
            <div class="form-field">
                <label class="form-label">Options de service</label>
                
                <div class="checkbox-group">
                    <label class="checkbox-label">
                        <input type="checkbox" class="checkbox-input" name="serviceOptions" value="domicile">
                        Services √† domicile
                    </label>
                </div>
                
                <div class="checkbox-group">
                    <label class="checkbox-label">
                        <input type="checkbox" class="checkbox-input" name="serviceOptions" value="devis">
                        Sur devis
                    </label>
                </div>
                
                <div class="checkbox-group">
                    <label class="checkbox-label">
                        <input type="checkbox" class="checkbox-input" name="serviceOptions" value="rdv">
                        RDV en ligne
                    </label>
                </div>
                
                <div class="checkbox-group">
                    <label class="checkbox-label">
                        <input type="checkbox" class="checkbox-input" name="serviceOptions" value="other" id="otherServiceOption">
                        Autre
                    </label>
                </div>
                
                <div class="conditional-field" id="otherServiceField">
                    <input type="text" class="form-input" placeholder="Pr√©cisez vos autres options de service">
                </div>
            </div>
            
            <div class="navigation-buttons">
                <button class="btn btn-prev" data-prev="3">Pr√©c√©dent</button>
                <button class="btn btn-next" data-next="5">Suivant</button>
            </div>
        </div>
        
        <!-- Vous pouvez continuer √† ajouter d'autres √©crans selon votre besoin -->
    </div>
    <!-- Screen 5: Informations pratiques -->
<div class="form-screen" id="screen5">
    <h2 class="screen-title">5. Informations pratiques √† afficher</h2>
    
    <div class="form-field">
        <label class="form-label" for="address">Adresse (facultatif)</label>
        <input type="text" id="address" class="form-input" placeholder="Votre adresse professionnelle">
    </div>
    
    <div class="form-field">
        <label class="form-label" for="phone">T√©l√©phone</label>
        <input type="tel" id="phone" class="form-input" required placeholder="Ex: 06 12 34 56 78">
        <div class="error-message">Veuillez renseigner un num√©ro de t√©l√©phone valide</div>
    </div>
    
    <div class="form-field">
        <label class="form-label" for="email">Email</label>
        <input type="email" id="email" class="form-input" required placeholder="Ex: contact@votre-entreprise.fr">
        <div class="error-message">Veuillez renseigner une adresse email valide</div>
    </div>
    
    <div class="form-field">
        <label class="form-label" for="hours">Horaires</label>
        <textarea id="hours" class="form-textarea" placeholder="Ex: Lundi-Vendredi: 9h-18h, Samedi: 9h-12h"></textarea>
    </div>
    
    <div class="form-field">
        <label class="form-label">Moyens de contact pr√©f√©r√©s</label>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="contactMethods" value="phone" checked>
                T√©l√©phone
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="contactMethods" value="email" checked>
                Email
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="contactMethods" value="form">
                Formulaire de contact
            </label>
        </div>
    </div>
    
    <div class="navigation-buttons">
        <button class="btn btn-prev" data-prev="4">Pr√©c√©dent</button>
        <button class="btn btn-next" data-next="6">Suivant</button>
    </div>
</div>

<!-- Screen 6: Points diff√©renciants -->
<div class="form-screen" id="screen6">
    <h2 class="screen-title">6. Points diff√©renciants</h2>
    
    <div class="form-field">
        <label class="form-label">Pourquoi vous choisir ? (s√©lectionnez vos atouts)</label>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="differentiators" value="speed">
                Rapidit√©
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="differentiators" value="price">
                Prix comp√©titifs
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="differentiators" value="experience">
                Exp√©rience
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="differentiators" value="service">
                Service apr√®s-vente
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="differentiators" value="local">
                Entreprise locale
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input" name="differentiators" value="ethical">
                D√©marche √©thique/√©cologique
            </label>
        </div>
    </div>
    
    <div class="form-field">
        <label class="form-label" for="otherDifferentiators">Autres points forts (pr√©cisez)</label>
        <textarea id="otherDifferentiators" class="form-textarea" placeholder="D√©crivez vos autres avantages concurrentiels..."></textarea>
    </div>
    
    <div class="navigation-buttons">
        <button class="btn btn-prev" data-prev="5">Pr√©c√©dent</button>
        <button class="btn btn-next" data-next="7">Suivant</button>
    </div>
</div>

<!-- Screen 7: Ton √† adopter -->
<div class="form-screen" id="screen7">
    <h2 class="screen-title">7. Ton √† adopter sur le site</h2>
    
    <div class="form-field">
        <label class="form-label">Quel ton souhaitez-vous pour votre site ?</label>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="tone" value="professional" class="radio-input" checked>
                S√©rieux et professionnel
            </label>
        </div>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="tone" value="reassuring" class="radio-input">
                Rassurant et humain
            </label>
        </div>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="tone" value="dynamic" class="radio-input">
                Dynamique et moderne
            </label>
        </div>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="tone" value="minimalist" class="radio-input">
                Minimaliste
            </label>
        </div>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="tone" value="other" class="radio-input" id="otherTone">
                Autre
            </label>
        </div>
        
        <div class="conditional-field" id="otherToneField">
            <input type="text" class="form-input" placeholder="Pr√©cisez le ton souhait√©">
        </div>
    </div>
    
    <div class="navigation-buttons">
        <button class="btn btn-prev" data-prev="6">Pr√©c√©dent</button>
        <button class="btn btn-next" data-next="8">Suivant</button>
    </div>
</div>

<!-- Screen 8: Pages souhait√©es -->
<div class="form-screen" id="screen8">
    <h2 class="screen-title">8. Pages souhait√©es (4 √† 5 max)</h2>
    
    <div class="form-field">
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input page-checkbox" name="pages" value="home" checked>
                Accueil
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input page-checkbox" name="pages" value="services" checked>
                Prestations / Services
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input page-checkbox" name="pages" value="about" checked>
                √Ä propos
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input page-checkbox" name="pages" value="contact" checked>
                Contact
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input page-checkbox" name="pages" value="testimonials">
                T√©moignages / Avis
            </label>
        </div>
        
        <div class="checkbox-group">
            <label class="checkbox-label">
                <input type="checkbox" class="checkbox-input page-checkbox" name="pages" value="custom" id="customPage">
                Autre page
            </label>
        </div>
        
        <div class="conditional-field" id="customPageField">
            <input type="text" class="form-input" placeholder="Nom de la page personnalis√©e">
        </div>
    </div>
    
    <div class="navigation-buttons">
        <button class="btn btn-prev" data-prev="7">Pr√©c√©dent</button>
        <button class="btn btn-next" data-next="9">Suivant</button>
    </div>
</div>

<!-- Screen 9: R√©seaux sociaux -->
<div class="form-screen" id="screen9">
    <h2 class="screen-title">9. R√©seaux sociaux & pr√©sence existante</h2>
    
    <div class="form-field">
        <label class="form-label" for="facebookUrl">Facebook</label>
        <input type="url" id="facebookUrl" class="form-input" placeholder="https://facebook.com/...">
    </div>
    
    <div class="form-field">
        <label class="form-label" for="instagramUrl">Instagram</label>
        <input type="url" id="instagramUrl" class="form-input" placeholder="https://instagram.com/...">
    </div>
    
    <div class="form-field">
        <label class="form-label" for="linkedinUrl">LinkedIn</label>
        <input type="url" id="linkedinUrl" class="form-input" placeholder="https://linkedin.com/in/...">
    </div>
    
    <div class="form-field">
        <label class="form-label">Avez-vous un site existant ?</label>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="hasWebsite" value="yes" class="radio-input" id="hasWebsiteYes">
                Oui
            </label>
        </div>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="hasWebsite" value="no" class="radio-input" checked>
                Non
            </label>
        </div>
        
        <div class="conditional-field" id="websiteUrlField">
            <input type="url" class="form-input" placeholder="URL de votre site existant">
        </div>
    </div>
    
    <div class="navigation-buttons">
        <button class="btn btn-prev" data-prev="8">Pr√©c√©dent</button>
        <button class="btn btn-next" data-next="10">Suivant</button>
    </div>
</div>

<!-- Screen 10: Autres demandes -->
<div class="form-screen" id="screen10">
    <h2 class="screen-title">10. Autres demandes / pr√©cisions</h2>
    
    <div class="form-field">
        <label class="form-label" for="otherRequests">Zone libre pour tous les √©l√©ments √† ne pas oublier</label>
        <textarea id="otherRequests" class="form-textarea" placeholder="Ex: mettre formulaire de rappel, ajouter un CV t√©l√©chargeable, etc."></textarea>
    </div>
    
    <div class="navigation-buttons">
        <button class="btn btn-prev" data-prev="9">Pr√©c√©dent</button>
        <button class="btn btn-next" data-next="11">Suivant</button>
    </div>
</div>

<!-- Screen 11: Coordonn√©es & RDV -->
<div class="form-screen" id="screen11">
    <h2 class="screen-title">11. Coordonn√©es & RDV</h2>
    
    <div class="form-field">
        <label class="form-label" for="clientName">Nom, pr√©nom</label>
        <input type="text" id="clientName" class="form-input" required>
        <div class="error-message">Veuillez renseigner votre nom</div>
    </div>
    
    <div class="form-field">
        <label class="form-label" for="clientEmail">Email</label>
        <input type="email" id="clientEmail" class="form-input" required>
        <div class="error-message">Veuillez renseigner une adresse email valide</div>
    </div>
    
    <div class="form-field">
        <label class="form-label" for="clientPhone">T√©l√©phone</label>
        <input type="tel" id="clientPhone" class="form-input" required>
        <div class="error-message">Veuillez renseigner un num√©ro de t√©l√©phone valide</div>
    </div>
    
    <div class="form-field">
        <label class="form-label">Pr√©f√©rence de contact</label>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="contactPreference" value="email" class="radio-input" checked>
                Email
            </label>
        </div>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="contactPreference" value="phone" class="radio-input">
                T√©l√©phone
            </label>
        </div>
        
        <div class="radio-group">
            <label class="radio-label">
                <input type="radio" name="contactPreference" value="visio" class="radio-input" id="visioPreference">
                Visio
            </label>
        </div>
    </div>
    
    <div class="form-field">
        <label class="checkbox-label">
            <input type="checkbox" class="checkbox-input" id="confirmTerms" required>
            J'accepte que mes informations soient trait√©es pour la cr√©ation de mon site web
        </label>
        <div class="error-message" id="confirmTermsError">Veuillez accepter les conditions</div>
    </div>
    
    <div class="navigation-buttons">
        <button class="btn btn-prev" data-prev="10">Pr√©c√©dent</button>
        <button class="btn btn-next" id="submitBtn">Envoyer</button>
    </div>
</div>

<!-- Screen 12: Confirmation -->
<div class="form-screen" id="screen12">
    <h2 class="screen-title">Merci pour votre soumission !</h2>
    
    <div style="text-align: center; padding: 40px 20px;">
        <svg width="80" height="80" viewBox="0 0 24 24" fill="none" stroke="var(--secondary)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
        </svg>
        
        <h3 style="color: var(--secondary); margin: 20px 0;">Formulaire envoy√© avec succ√®s !</h3>
        
        <p style="margin-bottom: 30px;">
            Merci pour ces informations. Nous allons maintenant cr√©er votre "Site Bien Fait".
        </p>
        
        <p>
            Un email de confirmation vous a √©t√© envoy√© √† <strong id="confirmationEmail">votre adresse email</strong>.
        </p>
        
        <p style="margin-top: 30px;">
            Notre √©quipe vous contactera tr√®s prochainement pour planifier l'entretien d'onboarding.
        </p>
    </div>
</div>
    <!-- Assistant IA discret -->
    <button class="assistant-button" id="assistantBtn">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><path d="M12 16v-4"></path><path d="M12 8h.01"></path></svg>
    </button>
    
    <div class="assistant-chat" id="assistantChat">
        <div class="assistant-header">Assistant Bureau des Sites</div>
        <div class="assistant-messages" id="assistantMessages">
            <div class="message assistant">
                Bonjour ! Je suis l√† pour vous aider √† remplir ce formulaire. N'h√©sitez pas √† me poser des questions.
            </div>
        </div>
        <div class="assistant-input">
            <input type="text" id="assistantInput" placeholder="Posez votre question...">
            <button id="assistantSend">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon></svg>
            </button>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Variables
            const screens = document.querySelectorAll('.form-screen');
            const progressDots = document.getElementById('progressDots');
            const saveDraftBtn = document.getElementById('saveDraft');
            const saveStatus = document.getElementById('saveStatus');
            const assistantBtn = document.getElementById('assistantBtn');
            const assistantChat = document.getElementById('assistantChat');
            const assistantInput = document.getElementById('assistantInput');
            const assistantSend = document.getElementById('assistantSend');
            const assistantMessages = document.getElementById('assistantMessages');
            
            // Form data object
            let formData = {
                uploadedFiles: {}
            };
            
            // Current screen
            let currentScreen = 1;
            const totalScreens = 12; // Nombre total d'√©crans du formulaire
    
            
            // Initialize functionality
            initFunctionality();
            
            // Function to initialize all functionality
            function initFunctionality() {
                setupConditionalFields();
                setupFileUploads();
                setupFontOptions();
                setupNavigation();
                setupAutosave();
                initColorSelector();
                setupAssistant();
otherObjective.addEventListener('change', function() {
                        otherObjectiveField.style.display = this.checked ? 'block' : 'none';
// Submit button click
document.getElementById('submitBtn').addEventListener('click', function() {
    if (validateScreen(currentScreen)) {
        saveScreenData(currentScreen);
        submitForm();
    }
});
            }
            
            // Setup conditional fields
            function setupConditionalFields() {
                // Other objective
                const otherObjective = document.getElementById('otherObjective');
                const otherObjectiveField = document.getElementById('otherObjectiveField');
                
                if (otherObjective && otherObjectiveField) {
                    

// Function to handle form submission
function submitForm() {
    // Get the email for confirmation
    const clientEmail = document.getElementById('clientEmail').value || 'votre adresse email';
    
    // Update the confirmation email in the success screen
    document.getElementById('confirmationEmail').textContent = clientEmail;
    
    // Go to the confirmation screen
    goToScreen(12);
    
    // Optional: Simulate sending data to a server
    console.log('Form data submitted:', formData);
    
    // In a real implementation, you would send the data to a server here
    // For example:
    // fetch('https://api.lebureaudessites.com/submit-form', {
    //     method: 'POST',
    //     headers: {
    //         'Content-Type': 'application/json',
    //     },
    //     body: JSON.stringify(formData)
    // })
    // .then(response => response.json())
    // .then(data => {
    //     console.log('Success:', data);
    // })
    // .catch((error) => {
    //     console.error('Error:', error);
    //     alert('Une erreur est survenue. Veuillez r√©essayer.');
    // });
}
                    });
                }
                
                // Other service option
                const otherServiceOption = document.getElementById('otherServiceOption');
                const otherServiceField = document.getElementById('otherServiceField');
                
                if (otherServiceOption && otherServiceField) {
                    otherServiceOption.addEventListener('change', function() {
                        otherServiceField.style.display = this.checked ? 'block' : 'none';
                    });
                }
                
                // Has charte
                const hasCharteYes = document.getElementById('hasCharteYes');
                const charteUploadField = document.getElementById('charteUploadField');
                
                if (hasCharteYes && charteUploadField) {
                    document.querySelectorAll('input[name="hasCharte"]').forEach(radio => {
                        radio.addEventListener('change', function() {
                            charteUploadField.style.display = this.value === 'yes' && this.checked ? 'block' : 'none';
                        });
                    });
                }
            }
            
            // Setup file uploads
            function setupFileUploads() {
                document.querySelectorAll('input[type="file"]').forEach(input => {
                    input.addEventListener('change', function() {
                        if (this.files.length > 0) {
                            const fileNameElement = document.getElementById(this.id + 'Name');
                            if (fileNameElement) {
                                if (this.files.length === 1) {
                                    fileNameElement.textContent = this.files[0].name;
                                } else {
                                    fileNameElement.textContent = `${this.files.length} fichiers s√©lectionn√©s`;
                                }
                            }
                            
                            // Store files in formData
                            if (!formData.uploadedFiles[this.id]) {
                                formData.uploadedFiles[this.id] = [];
                            }
                            
                            Array.from(this.files).forEach(file => {
                                formData.uploadedFiles[this.id].push(file.name);
                            });
                        }
                    });
                });
                
                // Make file upload buttons work
                document.querySelectorAll('.file-upload-button').forEach(button => {
                    button.addEventListener('click', function() {
                        const input = this.querySelector('input[type="file"]');
                        if (input) {
                            input.click();
                        }
                    });
                });
            }
            
            // Setup font options
            function setupFontOptions() {
                const fontOptions = document.querySelectorAll('.font-option');
                const selectedFontsInput = document.getElementById('selectedFonts');
                const selectedFonts = [];
                
                fontOptions.forEach(option => {
                    option.addEventListener('click', function() {
                        const font = this.getAttribute('data-font');
                        const maxFonts = 3;
                        
                        if (this.classList.contains('selected')) {
                            // Remove selection
                            this.classList.remove('selected');
                            const index = selectedFonts.indexOf(font);
                            if (index > -1) {
                                selectedFonts.splice(index, 1);
                            }
                        } else {
                            // Add selection (max 3)
                            if (selectedFonts.length < maxFonts) {
                                this.classList.add('selected');
                                selectedFonts.push(font);
                            } else {
                                alert(`Vous pouvez s√©lectionner jusqu'√† ${maxFonts} polices. D√©s√©lectionnez-en une d'abord.`);
                            }
                        }
                        
                        // Update hidden input
                        if (selectedFontsInput) {
                            selectedFontsInput.value = selectedFonts.join(',');
                        }
                    });
                });
            }
            
            // Setup navigation
            function setupNavigation() {
                // Next button click
                document.querySelectorAll('.btn-next').forEach(button => {
                    button.addEventListener('click', function() {
                        const nextScreen = parseInt(this.getAttribute('data-next'));
                        
                        if (nextScreen && validateScreen(currentScreen)) {
                            saveScreenData(currentScreen);
                            goToScreen(nextScreen);
                        }
                    });
                });
                
                // Previous button click
                document.querySelectorAll('.btn-prev').forEach(button => {
                    button.addEventListener('click', function() {
                        const prevScreen = parseInt(this.getAttribute('data-prev'));
                        
                        if (prevScreen) {
                            saveScreenData(currentScreen);
                            goToScreen(prevScreen);
                        }
                    });
                });
            }
            
            // Go to screen
            function goToScreen(screenNumber) {
    // Convertir en nombre si c'est une cha√Æne
    screenNumber = parseInt(screenNumber);
    
    // Masquer tous les √©crans et afficher celui demand√©
    document.querySelectorAll('.form-screen').forEach((screen, index) => {
        if (index + 1 === screenNumber) {
            screen.classList.add('active');
        } else {
            screen.classList.remove('active');
        }
    });
    
    // Mettre √† jour la barre de progression
    const progressBar = document.getElementById('progressBar');
    const progressText = document.getElementById('progressText');
    const progressPercentage = ((screenNumber - 1) / (totalScreens - 1)) * 100;
    
    progressBar.style.width = progressPercentage + '%';
    progressText.textContent = `√âtape ${screenNumber} sur ${totalScreens}`;
    
    // Mettre √† jour la variable currentScreen
    currentScreen = screenNumber;
    
    // Faire d√©filer vers le haut
    window.scrollTo(0, 0);
}
            
            // Setup autosave
            function setupAutosave() {
                // Save on draft button click
                saveDraftBtn.addEventListener('click', function() {
                    saveFormData();
                    saveStatus.textContent = 'Sauvegard√© √† ' + new Date().toLocaleTimeString();
                    setTimeout(() => {
                        saveStatus.textContent = '';
                    }, 3000);
                });
                
                // Auto save every 30 seconds
                setInterval(function() {
                    saveFormData();
                }, 30000);
                
                // Load saved data on page load
                const savedData = localStorage.getItem('siteBienFait_form');
                if (savedData) {
                    formData = JSON.parse(savedData);
                    loadFormData();
                }
            }
            
            // Save all form data
            function saveFormData() {
                saveScreenData(currentScreen);
                localStorage.setItem('siteBienFait_form', JSON.stringify(formData));
            }
            
            // Save current screen data
            function saveScreenData(screenNum) {
                const screen = document.getElementById(`screen${screenNum}`);
                if (!screen) return;
                
                // Save all inputs, selects, textareas
                screen.querySelectorAll('input:not([type="file"]), select, textarea').forEach(element => {
                    if (element.type === 'checkbox' || element.type === 'radio') {
                        if (element.checked) {
                            formData[element.name] = element.value;
                        }
                    } else {
                        formData[element.id] = element.value;
                    }
                });
                
                // Save font selections
                if (screenNum === 2) {
                    const selectedFonts = [];
                    screen.querySelectorAll('.font-option.selected').forEach(option => {
                        selectedFonts.push(option.getAttribute('data-font'));
                    });
                    formData.fonts = selectedFonts;
                    
                    // Save color selections
                    const selectedColors = [];
                    screen.querySelectorAll('.color-chip-value').forEach(chip => {
                        selectedColors.push(chip.textContent);
                    });
                    formData.colors = selectedColors;
                }
            }
            
            // Load form data
            function loadFormData() {
                // Load all inputs, selects, textareas
                document.querySelectorAll('input:not([type="file"]), select, textarea').forEach(element => {
                    if (element.id && formData[element.id]) {
                        element.value = formData[element.id];
                    } else if (element.name && formData[element.name] === element.value) {
                        element.checked = true;
                    }
                });
                
                // Load font selections
                if (formData.fonts) {
                    formData.fonts
formData.fonts.forEach(font => {
                        const option = document.querySelector(`.font-option[data-font="${font}"]`);
                        if (option) option.classList.add('selected');
                    });
                }
                
                // Load color selections
                if (formData.colors) {
                    formData.colors.forEach(color => {
                        addColor(color);
                    });
                }
                
                // Refresh conditional fields
                setupConditionalFields();
            }
            
            // Validate current screen
            function validateScreen(screenNum) {
                const screen = document.getElementById(`screen${screenNum}`);
                if (!screen) return true;
                
                let isValid = true;
                
                // Check required fields
                screen.querySelectorAll('input[required], select[required], textarea[required]').forEach(field => {
                    if (!field.value.trim()) {
                        const formField = field.closest('.form-field');
                        if (formField) {
                            formField.classList.add('error');
                            isValid = false;
                        }
                    } else {
                        const formField = field.closest('.form-field');
                        if (formField) {
                            formField.classList.remove('error');
                        }
                    }
                });
                
                // Validate email fields
                screen.querySelectorAll('input[type="email"]').forEach(field => {
                    if (field.value.trim() && !isValidEmail(field.value)) {
                        const formField = field.closest('.form-field');
                        if (formField) {
                            formField.classList.add('error');
                            isValid = false;
                        }
                    }
                });
                
                return isValid;
            }
           // Submit button click
document.getElementById('submitBtn').addEventListener('click', function() {
    if (validateScreen(currentScreen)) {
        saveScreenData(currentScreen);
        submitForm();
    }
});

// Function to handle form submission
function submitForm() {
    // Get the email for confirmation
    const clientEmail = document.getElementById('clientEmail').value || 'votre adresse email';
    
    // Update the confirmation email in the success screen
    document.getElementById('confirmationEmail').textContent = clientEmail;
    
    // Go to the confirmation screen
    goToScreen(12);
    
    // Optional: Simulate sending data to a server
    console.log('Form data submitted:', formData);
} 
            // Initialize color selector
            function initColorSelector() {
                // √âl√©ments du DOM
                const colorWheel = document.getElementById('colorWheel');
                const colorInput = document.getElementById('colorInput');
                const colorPreview = document.getElementById('colorPreview');
                const addColorBtn = document.getElementById('addColorBtn');
                const selectedColors = document.getElementById('selectedColors');
                const predefinedColors = document.getElementById('predefinedColors');
                const selectedColorsInput = document.getElementById('selectedColorsInput');
                
                if (!colorWheel || !colorInput || !colorPreview || !addColorBtn || !selectedColors || !predefinedColors) {
                    return; // √âl√©ments manquants, on sort de la fonction
                }
                
                // Limite de couleurs s√©lectionnables
                const MAX_COLORS = 3;
                
                // Liste de couleurs pr√©d√©finies
                const colorList = [
                    '#503D59', '#F3A884', '#AE5753', // Les couleurs de ta charte
                    '#FF5252', '#FF4081', '#E040FB', '#7C4DFF', '#536DFE', 
                    '#448AFF', '#40C4FF', '#18FFFF', '#64FFDA', '#69F0AE', 
                    '#B2FF59', '#EEFF41', '#FFEB3B', '#FFD740', '#FFAB40', 
                    '#FF6E40', '#FFFFFF', '#EEEEEE', '#BDBDBD', '#757575'
                ];
                
                // G√©n√©rer les couleurs pr√©d√©finies
                colorList.forEach(color => {
                    const colorSwatch = document.createElement('div');
                    colorSwatch.className = 'color-swatch';
                    colorSwatch.style.backgroundColor = color;
                    colorSwatch.setAttribute('data-color', color);
                    colorSwatch.title = color;
                    
                    colorSwatch.addEventListener('click', function() {
                        addColor(color);
                    });
                    
                    predefinedColors.appendChild(colorSwatch);
                });
                
                // Synchroniser la roue de couleur et le champ de texte
                colorWheel.addEventListener('input', function() {
                    colorInput.value = this.value;
                    colorPreview.style.backgroundColor = this.value;
                });
                
                colorInput.addEventListener('input', function() {
                    if (isValidColor(this.value)) {
                        colorPreview.style.backgroundColor = this.value;
                        colorWheel.value = this.value;
                    }
                });
                
                // Ajouter une couleur via le bouton
                addColorBtn.addEventListener('click', function() {
                    const color = colorInput.value.trim();
                    if (isValidColor(color)) {
                        addColor(color);
                    } else {
                        alert('Veuillez entrer une couleur valide (ex: #FF5500)');
                    }
                });
                
                // Fonction pour ajouter une couleur √† la s√©lection
                window.addColor = function(color) {
                    // V√©rifier si la couleur existe d√©j√†
                    const existingChips = selectedColors.querySelectorAll('.color-chip');
                    for (let chip of existingChips) {
                        const chipColor = chip.querySelector('.color-chip-remove').getAttribute('data-color');
                        if (chipColor.toLowerCase() === color.toLowerCase()) {
                            return; // La couleur existe d√©j√†
                        }
                    }
                    
                    // V√©rifier la limite de couleurs
                    if (existingChips.length >= MAX_COLORS) {
                        alert(`Vous pouvez s√©lectionner au maximum ${MAX_COLORS} couleurs. Supprimez une couleur existante pour en ajouter une nouvelle.`);
                        return;
                    }
                    
                    // Cr√©er la puce de couleur
                    const colorChip = document.createElement('div');
                    colorChip.className = 'color-chip';
                    colorChip.innerHTML = `
                        <div class="color-chip-preview" style="background-color: ${color};"></div>
                        <div class="color-chip-value">${color}</div>
                        <button class="color-chip-remove" data-color="${color}">√ó</button>
                    `;
                    
                    // Ajouter la puce au conteneur
                    selectedColors.appendChild(colorChip);
                    
                    // Ajouter l'√©v√©nement de suppression
                    const removeBtn = colorChip.querySelector('.color-chip-remove');
                    removeBtn.addEventListener('click', function() {
                        colorChip.remove();
                        updateSelectedColorsInput();
                    });
                    
                    // Mettre √† jour l'input cach√©
                    updateSelectedColorsInput();
                }
                
                // Fonction pour mettre √† jour l'input cach√© avec les couleurs s√©lectionn√©es
                function updateSelectedColorsInput() {
                    const colors = [];
                    document.querySelectorAll('.color-chip-value').forEach(chip => {
                        colors.push(chip.textContent);
                    });
                    selectedColorsInput.value = colors.join(',');
                }
                
                // V√©rifier si la couleur est valide
                function isValidColor(color) {
                    const s = new Option().style;
                    s.color = color;
                    return s.color !== '';
                }
            }
            
            // Setup assistant chat
            function setupAssistant() {
                // Toggle assistant chat
                assistantBtn.addEventListener('click', function() {
                    assistantChat.style.display = assistantChat.style.display === 'flex' ? 'none' : 'flex';
                });
                
                // Send message on button click
                assistantSend.addEventListener('click', sendAssistantMessage);
                
                // Send message on Enter key
                assistantInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        sendAssistantMessage();
                    }
                });
                
                // Function to send message
                function sendAssistantMessage() {
                    const message = assistantInput.value.trim();
                    
                    if (message) {
                        // Add user message
                        const userMessage = document.createElement('div');
                        userMessage.classList.add('message', 'user');
                        userMessage.textContent = message;
                        assistantMessages.appendChild(userMessage);
                        
                        // Clear input
                        assistantInput.value = '';
                        
                        // Scroll to bottom
                        assistantMessages.scrollTop = assistantMessages.scrollHeight;
                        
                        // Simulate response
                        setTimeout(() => {
                            const response = getAssistantResponse(message);
                            
                            const assistantMessage = document.createElement('div');
                            assistantMessage.classList.add('message', 'assistant');
                            assistantMessage.textContent = response;
                            assistantMessages.appendChild(assistantMessage);
                            
                            // Scroll to bottom
                            assistantMessages.scrollTop = assistantMessages.scrollHeight;
                        }, 1000);
                    }
                }
                
                // Get assistant response based on message
                function getAssistantResponse(message) {
                    message = message.toLowerCase();
                    
                    // Check for specific keywords
                    if (message.includes('logo')) {
                        return "Pour votre logo, vous pouvez soit choisir un type de logo (lettrage, pictogramme, abstrait), soit nous laisser vous faire des propositions. Vous pouvez √©galement nous partager des exemples de logos qui vous plaisent pour nous guider.";
                    } else if (message.includes('police') || message.includes('font')) {
                        return "Vous pouvez s√©lectionner jusqu'√† 3 polices qui vous plaisent. Ces polices seront utilis√©es pour votre site web et votre identit√© visuelle. Cliquez simplement sur les options qui vous plaisent.";
                    } else if (message.includes('couleur')) {
                        return "Vous pouvez choisir jusqu'√† 3 couleurs pour votre identit√© visuelle. Utilisez soit la roue de couleur, soit les couleurs pr√©d√©finies en cliquant dessus. Ces couleurs seront utilis√©es pour votre site web et votre logo.";
                    } else if (message.includes('d√©lai') || message.includes('temps')) {
                        return "La cr√©ation de votre site prendra environ 15 jours ouvr√©s apr√®s validation de votre brief et l'entretien d'onboarding avec votre charg√© de projet.";
                    } else if (message.includes('prix') || message.includes('co√ªt') || message.includes('tarif')) {
                        return "Le Site Bien Fait est disponible √† partir de 45‚Ç¨ HT/mois sur 48 mois. Ce tarif inclut la cr√©ation du site, l'h√©bergement, le nom de domaine et les mises √† jour.";
                    } else if (message.includes('sauvegarde')) {
                        return "Vos r√©ponses sont automatiquement sauvegard√©es. Vous pouvez √©galement cliquer sur 'Sauvegarder le brouillon' en haut du formulaire pour enregistrer manuellement vos donn√©es.";
                    }
                    
                    // Default responses
                    const defaultResponses = [
                        "Je suis l√† pour vous aider √† remplir ce formulaire. Que souhaitez-vous savoir ?",
                        "N'h√©sitez pas √† prendre votre temps pour remplir ce formulaire. Toutes ces informations nous aideront √† cr√©er un site qui vous ressemble.",
                        "Vous pouvez naviguer entre les diff√©rentes sections √† l'aide des boutons 'Pr√©c√©dent' et 'Suivant', ou en cliquant sur les points en haut du formulaire.",
                        "Plus vous donnez de d√©tails sur votre entreprise et vos besoins, plus votre site sera adapt√© √† vos attentes."
                    ];
                    
                    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];
                }
            }
            
            // Helper: Valid email check
            function isValidEmail(email) {
                const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return re.test(email);
            }
        });
    </script>
